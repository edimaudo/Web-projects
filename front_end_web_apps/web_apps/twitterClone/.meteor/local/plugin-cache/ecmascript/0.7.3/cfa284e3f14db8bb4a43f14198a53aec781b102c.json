{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"Tweets = new Meteor.Collection(\"tweets\");\n\nif (Meteor.isClient) {\n  Template.tweetBox.helpers({\n    charCount: function () {\n      return 140 - Session.get('numChars');\n    },\n    charClass: function () {\n      if (Session.get('numChars') > 140) {\n        return 'errCharCount';\n      } else {\n        return 'charCount';\n      }\n    },\n    disableButton: function () {\n      if (Session.get('numChars') <= 0 || Session.get('numChars') > 140) {\n        return 'disabled';\n      }\n    }\n  });\n  Template.tweetBox.events({\n    'input #tweetText': function () {\n      Session.set('numChars', $('#tweetText').val().length);\n    },\n    'click button': function () {\n      var tweet = $('#tweetText').val();\n      $('#tweetText').val(\"\");\n      Session.set('numChars', 0);\n      Tweets.insert({\n        message: tweet\n      });\n    }\n  });\n  Template.tweetBox.onRendered(function () {\n    Session.set('numChars', 0);\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {// code to run on server at startup\n  });\n}","map":{"version":3,"sources":["/client/main.js"],"names":["Tweets","Meteor","Collection","isClient","Template","tweetBox","helpers","charCount","Session","get","charClass","disableButton","events","set","$","val","length","tweet","insert","message","onRendered","isServer","startup"],"mappings":"AAAAA,SAAS,IAAIC,OAAOC,UAAX,CAAsB,QAAtB,CAAT;;AAEA,IAAID,OAAOE,QAAX,EAAqB;AACnBC,WAASC,QAAT,CAAkBC,OAAlB,CAA0B;AACxBC,eAAW,YAAW;AACpB,aAAO,MAAMC,QAAQC,GAAR,CAAY,UAAZ,CAAb;AACD,KAHuB;AAKxBC,eAAW,YAAW;AACpB,UAAIF,QAAQC,GAAR,CAAY,UAAZ,IAA0B,GAA9B,EAAmC;AACjC,eAAO,cAAP;AACD,OAFD,MAEO;AACL,eAAO,WAAP;AACD;AACF,KAXuB;AAaxBE,mBAAe,YAAW;AACxB,UAAIH,QAAQC,GAAR,CAAY,UAAZ,KAA2B,CAA3B,IACAD,QAAQC,GAAR,CAAY,UAAZ,IAA0B,GAD9B,EACmC;AACjC,eAAO,UAAP;AACD;AACF;AAlBuB,GAA1B;AAqBAL,WAASC,QAAT,CAAkBO,MAAlB,CAAyB;AACvB,wBAAoB,YAAU;AAC5BJ,cAAQK,GAAR,CAAY,UAAZ,EAAwBC,EAAE,YAAF,EAAgBC,GAAhB,GAAsBC,MAA9C;AACD,KAHsB;AAKvB,oBAAgB,YAAW;AACzB,UAAIC,QAAQH,EAAE,YAAF,EAAgBC,GAAhB,EAAZ;AACAD,QAAE,YAAF,EAAgBC,GAAhB,CAAoB,EAApB;AACAP,cAAQK,GAAR,CAAY,UAAZ,EAAwB,CAAxB;AACAb,aAAOkB,MAAP,CAAc;AAACC,iBAASF;AAAV,OAAd;AACD;AAVsB,GAAzB;AAaAb,WAASC,QAAT,CAAkBe,UAAlB,CAA6B,YAAY;AACvCZ,YAAQK,GAAR,CAAY,UAAZ,EAAwB,CAAxB;AACD,GAFD;AAGD;;AAED,IAAIZ,OAAOoB,QAAX,EAAqB;AACnBpB,SAAOqB,OAAP,CAAe,YAAY,CACzB;AACD,GAFD;AAGD","file":"/client/main.js.map","sourcesContent":["Tweets = new Meteor.Collection(\"tweets\");\n\nif (Meteor.isClient) {\n  Template.tweetBox.helpers({\n    charCount: function() {\n      return 140 - Session.get('numChars');\n    },\n\n    charClass: function() {\n      if (Session.get('numChars') > 140) {\n        return 'errCharCount';\n      } else {\n        return 'charCount';\n      }\n    },\n\n    disableButton: function() {\n      if (Session.get('numChars') <= 0 ||\n          Session.get('numChars') > 140) {\n        return 'disabled';\n      }\n    }\n  });\n\n  Template.tweetBox.events({\n    'input #tweetText': function(){\n      Session.set('numChars', $('#tweetText').val().length);\n    },\n\n    'click button': function() {\n      var tweet = $('#tweetText').val();\n      $('#tweetText').val(\"\");\n      Session.set('numChars', 0);\n      Tweets.insert({message: tweet});\n    }\n  });\n\n  Template.tweetBox.onRendered(function () {\n    Session.set('numChars', 0);\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]},"hash":"cfa284e3f14db8bb4a43f14198a53aec781b102c"}
