[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// client/template.main.js                                                                        //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\n                                                                                                  // 1\nTemplate.body.addContent((function() {                                                            // 2\n  var view = this;                                                                                // 3\n  return Spacebars.include(view.lookupTemplate(\"tweetBox\"));                                      // 4\n}));                                                                                              // 5\nMeteor.startup(Template.body.renderToDocument);                                                   // 6\n                                                                                                  // 7\nTemplate.__checkName(\"tweetBox\");                                                                 // 8\nTemplate[\"tweetBox\"] = new Template(\"Template.tweetBox\", (function() {                            // 9\n  var view = this;                                                                                // 10\n  return HTML.DIV({                                                                               // 11\n    class: \"tweetbox-container\"                                                                   // 12\n  }, \"\\n    \", HTML.DIV({                                                                         // 13\n    class: \"panel panel-default tweetbox col-md-6\"                                                // 14\n  }, \"\\n      \", HTML.DIV({                                                                       // 15\n    class: \"panel-body\"                                                                           // 16\n  }, \"\\n        \", HTML.Raw(\"<!-- Text box for tweet content -->\"), \"\\n        \", HTML.TEXTAREA({\n    class: \"form-control\",                                                                        // 18\n    id: \"tweetText\",                                                                              // 19\n    placeholder: \"What's happening?\",                                                             // 20\n    rows: \"3\"                                                                                     // 21\n  }), \"\\n\\n        \", HTML.Raw(\"<!-- Character count & button -->\"), \"\\n        \", HTML.DIV({     // 22\n    class: \"pull-right btnGroup\"                                                                  // 23\n  }, \"\\n          \", HTML.STRONG({                                                                // 24\n    class: function() {                                                                           // 25\n      return Spacebars.mustache(view.lookup(\"charClass\"));                                        // 26\n    }                                                                                             // 27\n  }, Blaze.View(\"lookup:charCount\", function() {                                                  // 28\n    return Spacebars.mustache(view.lookup(\"charCount\"));                                          // 29\n  })), \"\\n          \", HTML.BUTTON(HTML.Attrs({                                                   // 30\n    class: \"btn btn-info pull-right\",                                                             // 31\n    type: \"button\"                                                                                // 32\n  }, function() {                                                                                 // 33\n    return Spacebars.attrMustache(view.lookup(\"disableButton\"));                                  // 34\n  }), \"Tweet\"), \"\\n        \"), \"\\n\\n      \"), \"\\n    \"), \"\\n  \");                                 // 35\n}));                                                                                              // 36\n                                                                                                  // 37\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// client/main.js                                                                                 //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nif (Meteor.isClient) {                                                                            // 1\n  Template.tweetBox.onRendered(function () {                                                      // 2\n    Session.set('numChars', 0);                                                                   // 3\n  });                                                                                             // 4\n  Template.tweetBox.events({                                                                      // 6\n    'input #tweetText': function () {                                                             // 7\n      Session.set('numChars', $('#tweetText').val().length);                                      // 8\n    }                                                                                             // 9\n  });                                                                                             // 6\n  Template.tweetBox.helpers({                                                                     // 12\n    charCount: function () {                                                                      // 13\n      return 140 - Session.get('numChars');                                                       // 14\n    },                                                                                            // 15\n    charClass: function () {                                                                      // 17\n      if (Session.get('numChars') > 140) {                                                        // 18\n        return 'errCharCount'; //css class name                                                   // 19\n      } else {                                                                                    // 20\n        return 'charCount'; //css class name                                                      // 21\n      }                                                                                           // 22\n    },                                                                                            // 23\n    disableButton: function () {                                                                  // 25\n      if (Session.get('numChars') <= 0 || Session.get('numChars') > 140) {                        // 26\n        return 'disabled';                                                                        // 28\n      }                                                                                           // 29\n    }                                                                                             // 30\n  });                                                                                             // 12\n}                                                                                                 // 33\n                                                                                                  //\nif (Meteor.isServer) {                                                                            // 35\n  Meteor.startup(function () {// code to run on server at startup                                 // 36\n  });                                                                                             // 38\n}                                                                                                 // 39\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/main.js"],"names":["Meteor","isClient","Template","tweetBox","onRendered","Session","set","events","$","val","length","helpers","charCount","get","charClass","disableButton","isServer","startup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,QAAX,EAAqB;AACnBC,WAASC,QAAT,CAAkBC,UAAlB,CAA6B,YAAY;AACzCC,YAAQC,GAAR,CAAY,UAAZ,EAAwB,CAAxB;AACD,GAFC;AAIFJ,WAASC,QAAT,CAAkBI,MAAlB,CAAyB;AACvB,wBAAoB,YAAU;AAC5BF,cAAQC,GAAR,CAAY,UAAZ,EAAwBE,EAAE,YAAF,EAAgBC,GAAhB,GAAsBC,MAA9C;AACD;AAHsB,GAAzB;AAMAR,WAASC,QAAT,CAAkBQ,OAAlB,CAA0B;AACxBC,eAAW,YAAW;AACpB,aAAO,MAAMP,QAAQQ,GAAR,CAAY,UAAZ,CAAb;AACD,KAHuB;AAKxBC,eAAW,YAAW;AACpB,UAAIT,QAAQQ,GAAR,CAAY,UAAZ,IAA0B,GAA9B,EAAmC;AACjC,eAAO,cAAP,CADiC,CACP;AAC3B,OAFD,MAEO;AACL,eAAO,WAAP,CADK,CACqB;AAC3B;AACF,KAXuB;AAaxBE,mBAAe,YAAW;AACxB,UAAIV,QAAQQ,GAAR,CAAY,UAAZ,KAA2B,CAA3B,IACAR,QAAQQ,GAAR,CAAY,UAAZ,IAA0B,GAD9B,EACmC;AACjC,eAAO,UAAP;AACD;AACF;AAlBuB,GAA1B;AAqBC;;AAED,IAAIb,OAAOgB,QAAX,EAAqB;AACnBhB,SAAOiB,OAAP,CAAe,YAAY,CACzB;AACD,GAFD;AAGD,uG","file":"/app.js","sourcesContent":["if (Meteor.isClient) {  \n  Template.tweetBox.onRendered(function () {  \n  Session.set('numChars', 0);\n});\n\nTemplate.tweetBox.events({  \n  'input #tweetText': function(){\n    Session.set('numChars', $('#tweetText').val().length);\n  }\n});\n\nTemplate.tweetBox.helpers({  \n  charCount: function() {\n    return 140 - Session.get('numChars');\n  },\n\n  charClass: function() {\n    if (Session.get('numChars') > 140) {\n      return 'errCharCount';    //css class name\n    } else {\n      return 'charCount';       //css class name\n    }\n  },\n\n  disableButton: function() {\n    if (Session.get('numChars') <= 0 ||\n        Session.get('numChars') > 140) {\n      return 'disabled';\n    }\n  }\n});\n\n}\n\nif (Meteor.isServer) {  \n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}"]}}]