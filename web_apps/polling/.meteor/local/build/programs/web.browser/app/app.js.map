{"version":3,"sources":["meteor://ðŸ’»app/client/components/poll-form.js","meteor://ðŸ’»app/client/components/poll.js","meteor://ðŸ’»app/client/app.js","meteor://ðŸ’»app/collections/polls.js"],"names":["Template","pollForm","events","event","preventDefault","newPoll","question","target","value","choices","text","choice1","votes","choice2","choice3","Polls","insert","poll","pollID","$","currentTarget","parent","data","voteID","voteString","action","update","_id","$inc","body","helpers","polls","find","UI","registerHelper","context","options","map","item","index","_index","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAASC,QAAT,CAAkBC,MAAlB,CAAyB;AAEvB;AACA,iBAAe,UAASC,KAAT,EAAgB;AAE7B;AACAA,UAAMC,cAAN,GAH6B,CAK7B;;AACA,QAAIC,UAAU;AACZC,gBAAUH,MAAMI,MAAN,CAAaD,QAAb,CAAsBE,KADpB;AAEZC,eAAS,CACP;AAAGC,cAAMP,MAAMI,MAAN,CAAaI,OAAb,CAAqBH,KAA9B;AAAqCI,eAAO;AAA5C,OADO,EAEP;AAAGF,cAAMP,MAAMI,MAAN,CAAaM,OAAb,CAAqBL,KAA9B;AAAqCI,eAAO;AAA5C,OAFO,EAGP;AAAGF,cAAMP,MAAMI,MAAN,CAAaO,OAAb,CAAqBN,KAA9B;AAAqCI,eAAO;AAA5C,OAHO;AAFG,KAAd,CAN6B,CAe7B;;AACAG,UAAMC,MAAN,CAAaX,OAAb;AACD;AApBsB,CAAzB,8F;;;;;;;;;;;ACAA;AACAL,SAASiB,IAAT,CAAcf,MAAd,CAAqB;AAEnB;AACA,iBAAe,UAASC,KAAT,EAAgB;AAE7B;AACAA,UAAMC,cAAN,GAH6B,CAK7B;;AACA,QAAIc,SAASC,EAAEhB,MAAMiB,aAAR,EAAuBC,MAAvB,CAA8B,OAA9B,EAAuCC,IAAvC,CAA4C,IAA5C,CAAb;AACA,QAAIC,SAASJ,EAAEhB,MAAMiB,aAAR,EAAuBE,IAAvB,CAA4B,IAA5B,CAAb,CAP6B,CAS7B;;AACA,QAAIE,aAAa,aAAaD,MAAb,GAAsB,QAAvC;AACA,QAAIE,SAAS,EAAb;AACAA,WAAOD,UAAP,IAAqB,CAArB,CAZ6B,CAc7B;;AACAT,UAAMW,MAAN,CACE;AAAEC,WAAKT;AAAP,KADF,EAEE;AAAEU,YAAMH;AAAR,KAFF;AAKD;AAvBkB,CAArB,8F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDAzB,SAAS6B,IAAT,CAAcC,OAAd,CAAsB;AAEpBC,SAAO,YAAW;AAChB,WAAOhB,MAAMiB,IAAN,EAAP;AACD;AAJmB,CAAtB,E,CAQA;;AACAC,GAAGC,cAAH,CAAkB,cAAlB,EAAkC,UAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAC3D,MAAID,OAAJ,EAAa;AACX,WAAOA,QAAQE,GAAR,CAAY,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACvCD,WAAKE,MAAL,GAAcD,KAAd;AACA,aAAOD,IAAP;AACD,KAHM,CAAP;AAID;AACF,CAPD,+F;;;;;;;;;;;ACTAvB,QAAQ,IAAI0B,MAAMC,UAAV,CAAqB,OAArB,CAAR,0D","file":"/app.js","sourcesContent":["Template.pollForm.events({\n\n  // handle the form submission\n  'submit form': function(event) {\n\n    // stop the form from submitting\n    event.preventDefault();\n\n    // get the data we need from the form\n    var newPoll = {\n      question: event.target.question.value,\n      choices: [\n        {  text: event.target.choice1.value, votes: 0 },\n        {  text: event.target.choice2.value, votes: 0 },\n        {  text: event.target.choice3.value, votes: 0 }\n      ]\n    };    \n\n    // create the new poll\n    Polls.insert(newPoll);\n  }\n\n});","// attach events to our poll template\nTemplate.poll.events({\n\n  // event to handle clicking a choice\n  'click .vote': function(event) {\n\n    // prevent the default behavior\n    event.preventDefault();\n\n    // get the parent (poll) id\n    var pollID = $(event.currentTarget).parent('.poll').data('id');\n    var voteID = $(event.currentTarget).data('id');\n\n    // create the incrementing object so we can add to the corresponding vote\n    var voteString = 'choices.' + voteID + '.votes';\n    var action = {};\n    action[voteString] = 1;\n\n    // increment the number of votes for this choice\n    Polls.update(\n      { _id: pollID }, \n      { $inc: action }\n    );\n\n  }\n\n});","Template.body.helpers({\n\n  polls: function() {\n    return Polls.find();\n  }\n\n});\n\n// adds index to each item\nUI.registerHelper('indexedArray', function(context, options) {\n  if (context) {\n    return context.map(function(item, index) {\n      item._index = index;\n      return item;\n    });\n  }\n});","Polls = new Mongo.Collection('polls');"]}